{
  "openapi": "3.0.0",
  "info": {
    "title": "Goweb API",
    "version": "1.0.0",
    "description": "API documentation for Goweb - Worksite Qualification Form"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Repair": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "example": "John"
          },
          "lastname": {
            "type": "string",
            "example": "Doe"
          },
          "address": {
            "type": "string",
            "example": "123 Main St"
          },
          "zip": {
            "type": "string",
            "example": "12345"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "example": "123-456-7890"
          },
          "paymentOption": {
            "type": "string",
            "example": "Credit Card"
          },
          "generalTerms": {
            "type": "boolean",
            "example": true
          },
          "retractTerms": {
            "type": "boolean",
            "example": true
          },
          "commercialOffer": {
            "type": "boolean",
            "example": false
          },
          "type": {
            "type": "string",
            "example": "Plumbing"
          },
          "location": {
            "type": "string",
            "example": "123 Main St, Apt 4B"
          },
          "reason": {
            "type": "string",
            "example": "Leakage in the bathroom",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "example": "The leakage is causing water damage to the floor.",
            "nullable": true
          }
        },
        "required": [
          "firstname",
          "lastname",
          "address",
          "zip",
          "email",
          "phone",
          "paymentOption",
          "generalTerms",
          "retractTerms",
          "type",
          "location"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": ["email", "password"]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/repairs": {
      "get": {
        "summary": "Get all repair forms",
        "tags": ["Repairs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of repair forms",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Repair"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "summary": "Create a new repair form",
        "tags": ["Repairs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Repair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Repair form created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repair"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/repairs/{id}": {
      "get": {
        "summary": "Get a specific repair form",
        "tags": ["Repairs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Repair form details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repair"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "summary": "Update a specific repair form",
        "tags": ["Repairs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Repair"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Repair form updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Repair"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "delete": {
        "summary": "Delete a specific repair form",
        "tags": ["Repairs"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "User login",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "your-jwt-token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "User registration",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    }
  }
}
